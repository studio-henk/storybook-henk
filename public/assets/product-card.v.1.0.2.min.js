class ProductCard extends HTMLElement{constructor(){super();const t=this.getAttribute("fabric-label-suffix");this.fabricLabelSuffix=t||"+meer",this.shadow=this.attachShadow({mode:"open"}),this.template=document.createElement("template"),this.template.innerHTML=`\n        <style>\n        /* @import "/assets/button.css"; */\n        /* @import "/assets/button-group.css"; */\n\n        @keyframes fadeIn {\n            from {\n                opacity: 0;\n            }\n            to {\n                opacity: 1;\n            }\n        }\n\n        .ProductCard {\n            background-color: var(--color-background-tertiary, whitesmoke);\n            border-radius: 8px;\n            display: flex;\n            flex-direction: column;\n            position: relative;\n            /* max-width: 267px; */\n            aspect-ratio: 2 / 3;\n            border: 1px solid var(--color-border-muted);\n        }\n\n        .ProductCard img {\n            max-width: 100%;\n        }\n\n        .ProductCard--animated {\n             opacity: 0;\n             animation: 1s linear 0.3s forwards fadeIn;\n         }\n\n        .ProductCard__link {\n            text-decoration: none;\n          display: flex;\n        }\n\n        .ProductCard__link:focus,\n        .ProductCard__link:hover {\n            color: currentColor;\n        }\n\n        .ProductCard__image-container {\n            flex: 0 1 auto;\n            overflow: hidden;\n            border-top-left-radius: 8px;\n            border-top-right-radius: 8px;\n        }\n\n        .ProductCard__img {\n            width: auto;\n            height: auto;\n            aspect-ratio: 1 / 1;\n            object-fit: cover;\n            object-position: center;\n            border-top-left-radius: 8px;\n            border-top-right-radius: 8px;\n            transition: transform 0.3s ease;\n            transform: scale(1.5);\n        }\n\n        .ProductCard__link:hover .ProductCard__img {\n            transform: scale(1.75);\n        }\n\n        .ProductCard__tags {\n            position: absolute;\n            top: 1em;\n            right: 1em;\n            z-index: 9;\n        }\n\n        .ProductCard__tag {\n            /* align-items: center; */\n            /* display: inline-flex; */\n            /* border-radius: 40px; */\n            /* gap: .36363636em; */\n            /* justify-content: flex-start; */\n            /* line-height: 24px; */\n            /* padding: .25em .83333333em; */\n            /* text-align: center; */\n            /* vertical-align: middle; */\n        }\n\n        .ProductCard__content * {\n            margin: 0;\n        }\n\n        .ProductCard__content {\n            padding: 0px;\n            display: flex;\n            flex-direction: column;\n            gap: 0px;\n            width: min(100% - 2rem);\n            margin-inline: auto;\n            padding-block: 0.5rem;\n        }\n\n        /* .ProductCard__content > ul { */\n        /*     padding: 0; */\n        /*     margin-left: 24px; */\n        /* } */\n\n        .ProductCard__ProductName {\n          font-weight: 500;\n        }\n\n        .ProductCard__description {\n          font-size: 13px;\n          line-height: 16px;\n        }\n\n        .truncate {\n          --_line-clamp: 2;\n          display: -webkit-box;\n          -webkit-line-clamp: var(--_line-clamp, var(--line-clamp));\n          -webkit-box-orient: vertical;\n          overflow: hidden;\n        }\n\n        .ProductCard__usps-list {\n          font-size: 13px;\n          line-height: 16px;\n          margin-block: 1lh;\n          padding: 0;\n          margin-left: 14px;\n        }\n\n        .ProductCard__Price {\n            text-align: right;\n            /* font-size: 20px; */\n        }\n\n        .ProductCard__config {\n            display: flex;\n            flex-direction: column;\n            gap: 24px;\n        }\n\n        .ProductCard__config-options {\n          display: flex;\n          flex-wrap: wrap;\n          align-items: center;\n          gap: 0.5rem;\n          font-size: 13px;\n          line-height: 16px;\n          margin-block-start: 8px;\n        }\n\n        .ProductCard__swatch {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            width: 48px;\n            height: 48px;\n            border-radius: 50px;\n            font-size: 0;\n        }\n\n        .ProductCard__swatch img {\n            border-radius: 50px;\n        }\n\n        .ProductCard__swatch {\n            border: 2px solid transparent;\n        }\n\n        .ProductCard__swatch--selected {\n            border: 2px solid black;\n        }\n\n        .ProductCard__swatch:hover {\n            border: 2px solid black;\n        }\n\n        .ProductCard__swatch-container {\n            position: relative;\n        }\n\n        .ProductCard__swatch-container--small {\n            display: flex;\n            gap: 4px;\n            flex-wrap: nowrap;\n        }\n\n        .ProductCard__swatch-container--large {\n            display: flex;\n            gap:8px;\n        }\n\n        :host([product-swatch-size="large"]) .ProductCard__config-options {\n            flex-direction: column;\n        }\n\n        :host([product-swatch-size="large"]) .ProductCard__config-options .ProductCard__label {\n            width: 100%;\n        }\n\n        :host([product-swatch-size="large"]) .ProductCard__config-options .ProductCard__swatch-container {\n            display: flex;\n            gap: 8px;\n        }\n\n        .items-stacked .ProductCard__swatch {\n            position: absolute;\n            --spacing-swatch: 24;\n        }\n\n        .items-stacked .ProductCard__swatch:not(:first-child) {\n            margin-left: calc(var(--spacing-swatch) * 1px);\n        }\n\n        .items-stacked .ProductCard__swatch.color-orange {\n            margin-left: calc(2 * var(--spacing-swatch) * 1px);\n        }\n\n        .items-stacked .ProductCard__swatch.color-brown {\n            margin-left: calc(3 * var(--spacing-swatch) * 1px);\n        }\n\n        .items-stacked .ProductCard__swatch.color-blue {\n            margin-left: calc(4 * var(--spacing-swatch) * 1px);\n        }\n\n        img.ProductCard__swatch {\n            mix-blend-mode: darken;\n        }\n\n        .ProductCard__swatch-container--small {\n            height: 24px;\n            line-height: 12px;\n        }\n\n        .ProductCard__swatch-container--small .ProductCard__swatch {\n            width: 20px;\n            height: 20px;\n            cursor: default;\n            --spacing-swatch: 12;\n        }\n\n        .ProductCard .henk-button-group {\n          margin-block-start: 0.3333333lh;\n          margin-block-end: 0;\n        }\n\n        @media only screen and (min-width: 1024px) {\n            .ProductCard__config-options {\n                flex-direction: row;\n                align-items: center;\n            }\n        }\n        </style>\n        <div class="ProductCard">\n            <div class="ProductCard__image-container">\n                <a href="${this.productLinks[0]}" class="ProductCard__link">\n                    <img\n                    src="${this.productImages[0]}"\n                    width="1240"\n                    height="1240"\n                    class="ProductCard__img"\n                    />\n                </a>\n            </div>\n            <div class="ProductCard__tags">${this.renderTags()}</div>\n            <div class="ProductCard__content">\n                <p class="ProductCard__ProductName">${this.productName}</p>\n                ${this.productDescription?`<p class="ProductCard__description truncate">${this.productDescription}</p>`:""}\n                ${this.productUsps?`${this.renderUsps()}`:""}\n\n\x3c!-- <div class"henk-product-card__options">${this.productOptions}</div> --\x3e\n\n${this.fabricNames&&this.fabricNames.length>1?`<div class="ProductCard__config-options">\n        <p class="ProductCard__label">${this.fabricLabel}</p>\n        <div class="ProductCard__swatch-container${"small"===this.productSwatchSize?" ProductCard__swatch-container--small":""}">\n        ${this.renderSwatches()}\n        </div>\n        <span class="ProductCard__label">${this.fabricLabelSuffix}</span>\n      </div>`:""}\n                <div class="henk-button-group" part="henk-button-group align-end">\n                    <a\n                    href="${this.productLinks[0]}"\n                    class="henk-link-button henk-link-button--small henk-link-button--primary ProductCard__Price"\n                    >${this.productPrices[0]}\n                    </a>\n                </div>\n            </div>\n        </div>\n        `,this.shadow.appendChild(this.template.content.cloneNode(!0));const n=["/assets/_henk-link-button.css","/assets/_henk-button-group.css","/assets/_henk-tag.css"];(async()=>{const t=document.createElement("style");t.textContent=(await Promise.all(n.map(t=>fetch(t).then(t=>t.text())))).join("\n"),this.shadow.appendChild(t)})();const e=this.getAttribute("fade-in");if(this.fadeIn=null!==e&&"true"===e.toLowerCase(),this.fadeIn){const t=document.querySelectorAll("product-card"),n=.3*Array.from(t).indexOf(this);this.style.opacity="0",this.style.animation=`fadeIn 0.5s linear ${n}s forwards`}}connectedCallback(){this.shadow.querySelectorAll(".ProductCard__swatch").forEach(t=>{t.addEventListener("mouseover",()=>{this.handleSwatchInteraction(t)}),t.addEventListener("focus",()=>this.handleSwatchFocus(t)),t.addEventListener("click",t=>t.preventDefault())})}handleSwatchInteraction(t){this.removeAllSelectedSwatches(),t.classList.add("ProductCard__swatch--selected"),this.updateMainImage(t.getAttribute("data-image")),this.updateMainImageHref(t.getAttribute("data-link")),this.updateButtonHref(t.getAttribute("data-link")),this.updatePrice(t.getAttribute("data-prices"))}handleSwatchFocus(t){this.handleSwatchInteraction(t),t.addEventListener("keydown",n=>{console.log(n.keyCode),13===n.keyCode&&(console.log("enter pressed"),window.location.href=t.getAttribute("href"))})}get productName(){return this.getAttribute("product-name")||"No product name provided"}set productName(t){this.setAttribute("product-name",t)}get productDescription(){return this.getAttribute("product-description")||""}set productDescription(t){this.setAttribute("product-description",t)}get productOptions(){return this.getAttribute("product-options")||"No options provided"}set productOptions(t){this.setAttribute("product-options",t)}get productImages(){const t=this.getAttribute("product-images");return t?JSON.parse(t.replace(/'/g,'"')):[]}get productUsps(){const t=this.getAttribute("product-usps");return t&&"[]"!==t?JSON.parse(t.replace(/'/g,'"')):null}set productUsps(t){const n=JSON.stringify(t).replace(/"/g,"'");this.setAttribute("product-usps",n)}get productLinks(){const t=this.getAttribute("product-links");return t?JSON.parse(t.replace(/'/g,'"')):[]}set productLinks(t){console.log(t);const n=JSON.stringify(t).replace(/"/g,"'");this.setAttribute("product-links",n)}get productPrices(){const t=this.getAttribute("product-prices");return t?JSON.parse(t.replace(/'/g,'"')):[]}set productPrices(t){this.setAttribute("product-prices",JSON.stringify(t).replace(/"/g,"'"))}get productSwatchSize(){return this.getAttribute("product-swatch-size")||""}set productSwatchSize(t){this.setAttribute("product-swatch-size",t)}get fabricLabel(){return this.getAttribute("fabric-label")||""}set fabricLabel(t){this.setAttribute("fabric-label",t)}get fabricImages(){const t=this.getAttribute("fabric-images");return t?JSON.parse(t.replace(/'/g,'"')):[]}set fabricImages(t){this.setAttribute("fabric-images",JSON.stringify(t).replace(/"/g,"'"))}get fabricNames(){const t=this.getAttribute("fabric-names");return t?JSON.parse(t.replace(/'/g,'"')):[]}set fabricNames(t){this.setAttribute("fabric-names",JSON.stringify(t).replace(/"/g,"'"))}get productTags(){const t=this.getAttribute("product-tags");return t&&"[]"!==t?JSON.parse(t.replace(/'/g,'"')):null}renderSwatches(){return this.fabricImages.map((t,n)=>`\n            <a href="${this.productLinks[n]}" class="ProductCard__swatch${0===n?" ProductCard__swatch--selected":""}"\n            title="${this.fabricNames[n]}"\n            data-image="${this.productImages[n]}"\n            data-prices="${this.productPrices[n]}"\n            data-link="${this.productLinks[n]}"\n            >\n            <img src="${t}" alt="stof" />\n            </a>\n            `).join("")}renderUsps(){return`\n        <ul class="ProductCard__usps-list">\n        ${this.productUsps.map((t,n)=>`\n                <li>${this.productUsps[n]}</li>\n                `).join("")}\n            </ul>\n            `}renderTags(){let t="";return this.productTags&&(t=this.productTags.map((t,n)=>`\n                    <span class="ProductCard__tag henk-tag henk-tag--small">${this.productTags[n]}</span>\n                    `).join("")),t}updateMainImage(t){const n=this.shadow.querySelector(".ProductCard__img");n&&(n.src=`${t}`)}updateMainImageHref(t){const n=this.shadow.querySelector(".ProductCard__link");n&&(n.href=`${t}`)}updateButtonHref(t){const n=this.shadow.querySelector(".ProductCard__Price");n&&(n.href=`${t}`)}updatePrice(t){const n=this.shadow.querySelector(".ProductCard__Price");n&&(n.textContent=t)}removeAllSelectedSwatches(){this.shadow.querySelectorAll(".ProductCard__swatch--selected").forEach(t=>{t.classList.remove("ProductCard__swatch--selected")})}}customElements.define("product-card",ProductCard);